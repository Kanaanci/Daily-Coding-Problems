package dailyCodingProblems;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Random;
import java.util.Vector;

/**
*Given a list of numbers and a number k, return whether any two numbers from the list add up to k.
*
*For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.
*
*Bonus: Can you do this in one pass?
*
*
*Doing this with Linked List, Array List, and Vector
*/

public class CodingProblem1 {
	private static int k = 5;
	
	private static Random rand = new Random();
	private static LinkedList<Integer> numLinkedList = new LinkedList<Integer>();
	private static ArrayList<Integer> numArrayList = new ArrayList<Integer>();
	private static Vector<Integer> numVector = new Vector<Integer>();
	
	
	public static void main(String[] args) {
		for(int i = 0; i < 10; i++) {
			int numToAdd = rand.nextInt(20);
			System.out.println(numToAdd);
			
			numLinkedList.add(rand.nextInt(numToAdd));
			numArrayList.add(rand.nextInt(numToAdd));
			numVector.add(rand.nextInt(numToAdd));
		}
		System.out.println("Values in lists:" + numLinkedList);

	}

}
